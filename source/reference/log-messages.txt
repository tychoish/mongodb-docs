============
Log Messages
============

.. default-domain:: mongodb

.. versionchanged:: 2.8

Starting in MongoDB 2.8, MongoDB includes the :ref:`severity level
<log-severity-levels>` and the :ref:`component
<log-messages-named-components>` associated with each log message. The
log messages have the form:

.. code-block:: none

   <timestamp> <severity> <component> <message>

For example:

.. code-block:: none

   2014-11-03T18:28:32.450-0500 I NETWORK [initandlisten] waiting for connections on port 27017

Timestamp
---------

The default format for the ``<timestamp>`` is ``iso8601-local``. To
modify the timestamp format, use the :option:`--timeStampFormat <mongod
--timeStampFormat>` runtime option or the
:setting:`systemLog.timeStampFormat` setting.

.. _log-severity-levels:

Severity Levels
---------------

The following table lists the severity levels associated with each log
message:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Level
     - Description

   * - ``F``
     - Fatal

   * - ``E``
     - Warning

   * - ``W``
     - Warning

   * - ``I``
     - Informational and Verbosity Level of 0

   * - ``D``
     - All Verbosity Levels > 0

.. _log-messages-components:

Components
----------

Log messages now include components, providing functional
categorization of the messages:

.. data:: ACCESS

   Components related to access control, such as authentication. To
   specify the log level for :data:`ACCESS` components, use the
   :setting:`systemLog.component.accessControl.verbosity` setting.

.. data:: COMMANDS

   Components related to :doc:`database commands </reference/command>`,
   such as :dbcommand:`count`. To specify the log level for
   :data:`COMMANDS` components, use the
   :setting:`systemLog.component.commands.verbosity` setting.

.. data:: CONTROL

   Components related to control activities, such as initialization. To
   specify the log level for :data:`CONTROL` components, use the
   :setting:`systemLog.component.control.verbosity` setting.

.. data:: GEO

   Components related to the parsing of geospatial shapes, such as
   verifying the GeoJSON shapes. To specify the log level for
   :data:`GEO` components, set the
   :setting:`systemLog.component.geo.verbosity` parameter.

.. data:: INDEXING

   Components related to indexing operations, such as
   creating indexes. To specify the log level for
   :data:`INDEXING` components, set the
   :setting:`systemLog.component.indexing.verbosity` parameter.

.. data:: NETWORK

   Components related to network activities, such as accepting
   connections. To specify the log level for :data:`NETWORK`
   components, set the
   :setting:`systemLog.component.networking.verbosity` parameter.

.. data:: QUERY

   Components related to queries, including query planner activities.
   To specify the log level for :data:`QUERY` components, set the
   :setting:`systemLog.component.query.verbosity` parameter.

.. data:: REPLSETS

   Components related to replica sets, such as initial sync and
   heartbeats. To specify the log level for :data:`REPLSETS`
   components, set the
   :setting:`systemLog.component.replication.verbosity` parameter.

.. data:: SHARDING

   Components related to sharding activities, such as the startup of
   the :program:`mongos`. To specify the log level for :data:`SHARDING`
   components, use the
   :setting:`systemLog.component.sharding.verbosity` setting.

.. data:: STORAGE

   Components related to storage activities, such as processes involved
   in the :dbcommand:`fsync` command. To specify the log level for
   :data:`STORAGE` components, use the
   :setting:`systemLog.component.storage.verbosity` setting.

   MongoDB distinguishes :data:`JOURNAL` components from
   :data:`STORAGE` components; however, MongoDB uses
   :setting:`systemLog.component.storage.verbosity` for :data:`JOURNAL`
   components if
   :setting:`systemLog.component.storage.journaling.verbosity` setting
   is unset.

.. data:: JOURNAL

   Components related specifically to journaling activities. To specify
   the log level for :data:`JOURNAL` components, use the
   :setting:`systemLog.component.storage.journaling.verbosity` setting.

   MongoDB distinguishes :data:`JOURNAL` components from
   :data:`STORAGE` components; however, if
   :setting:`systemLog.component.storage.journaling.verbosity` is
   unset, MongoDB uses :setting:`systemLog.component.storage.verbosity`
   for :data:`JOURNAL` components as well.

.. data:: WRITES

   Components related to write operations, such as :dbcommand:`update`
   commands. To specify the log level for :data:`WRITES` components,
   use the :setting:`systemLog.component.writes.verbosity` setting.

.. data:: -

   Components not associated with a named component. Unnamed components
   have the default log level specified in the
   :setting:`systemLog.verbosity` setting. The
   :setting:`systemLog.verbosity` setting is the default setting for
   both named and unnamed components.

Configure Log Verbosity Levels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To configure the default log level for all components, use the
:setting:`systemLog.verbosity` setting. To configure the level of
specific components, use the ``systemLog.component.<name>.verbosity``
settings.

For example, the following configuration sets the
:setting:`systemLog.verbosity` to ``1``, the
:setting:`systemLog.component.query.verbosity` to ``2``, the
:setting:`systemLog.component.storage.verbosity` to ``2``, and the
:setting:`systemLog.component.storage.journaling.verbosity` to ``1``:

.. code-block:: javascript

   systemLog:
      verbosity: 1
      component:
         query:
            verbosity: 2
         storage:
            verbosity: 2
            journaling:
               verbosity: 1

All components not specified in the configuration have the
:setting:`systemLog.verbosity` of ``1``.
