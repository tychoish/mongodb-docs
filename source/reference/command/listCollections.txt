===============
listCollections
===============

.. default-domain:: mongodb

.. versionadded:: 2.8.0

Definition
----------

.. dbcommand:: listCollections

   Returns an array with a document for each collection in the database.

   .. include:: /reference/command/listCollections-field.rst

Output
------

.. data:: listCollections.collections

   An array of documents for each collection.

   .. data:: listCollections.collections[n].name

      The name of the collection.

   .. data:: listCollections.collections[n].options

      A document with a mapping of collection options and their
      values.

.. data:: listCollections.ok

   The return value for the command. A value of ``1`` indicates
   success.

Examples
--------

List All Collections
~~~~~~~~~~~~~~~~~~~~

To return all collections in the ``records`` database use the
following operation in the :program:`mongo` shell:

.. code-block:: javascript

   use records
   db.runCommand( { listCollections: 1 } );

Consider the following output for a database that only has a ``users``
collection: 

.. code-block:: javascript

   {
        "collections" : [
                {
                        "name" : "users",
                        "options" : {
                                "flags" : 1
                        }
                }
        ],
        "ok" : 1
   }

List Matching Collections
~~~~~~~~~~~~~~~~~~~~~~~~~

Use the ``filter`` argument to the :dbcommand:`listCollections`
command to specify a query that will limit the collections returned in
the list, as in the following examples:

.. code-block:: javascript

   use records
   db.runCommand( { listCollections: 1, filter: { capped: true } } );
   db.runCommand( { listCollections: 1, filter: { name: { $regex: "^users\..*" } } } );
